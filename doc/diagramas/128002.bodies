class MSC
!!!128002.cpp!!!	addInst(in i : Instance) : void
std::map<string, Instance *>::const_iterator
  mit (instances.begin()),
  mend(instances.end());

for(;mit!=mend;++mit) 
  {
    if (((mit->first).compare(i.get_iid())) == 0)
      {	
	std::cout << "Error: The instance already exists." << std::endl;
	exit(0); 
      }
  }

instances[i.get_iid()] = &i;
!!!128130.cpp!!!	addMsg(in m : Message) : void
std::map<string, Message *>::const_iterator
  mit (messages.begin()),
  mend(messages.end());

int id = 0;

if (m.get_mid().compare("No_Info_Available") == 0)
  {
    std::stringstream stream;
    int i = messages.size();
    stream << i;
    messages[stream.str()] = &m;
  }
 else 
   {
     for(;mit!=mend;++mit) 
       {
	 if ((mit->first.compare(m.get_mid())) == 0)
	   {
	     std::cout << "Error: the mid (" <<  m.get_mid() << 
	       ") used in the message already exists" << std::endl;
	     exit(0);
	   }
       }
     messages[m.get_mid()] = &m;  
   }
!!!157570.cpp!!!	searchIid(in iid : string) : Instance *
std::map<string, Instance *>::const_iterator
  mit (instances.begin()),
  mend(instances.end());

for(;mit!=mend;++mit) 
  {
    if ((mit->first.compare(iid)) == 0)
      {	
	return mit->second;
      }
  }

return NULL;
!!!157954.cpp!!!	searchMid(in mid : string) : Message *
  std::map<string, Message *>::const_iterator
    mit (messages.begin()),
    mend(messages.end());
  
  for(;mit!=mend;++mit) 
    {
      if ((mit->first.compare(mid)) == 0)
        {	
  	return mit->second;
        }
    }
return NULL;
!!!128325.cpp!!!	print() : void
std::map<string, Instance *>::const_iterator
  mit (instances.begin()),
  mend(instances.end());

for(;mit!=mend;++mit) 
  {
    mit->second->print();
  }

std::map<string, Message *>::const_iterator
  mit2 (messages.begin()),
  mend2(messages.end());

for(;mit2!=mend2;++mit2) 
  {
    mit2->second->print();
  }
