class MSC
!!!128002.cpp!!!	addInst(in i : Instance) : void
std::map<string, Instance *>::const_iterator
  mit (instances.begin()),
  mend(instances.end());

for(;mit!=mend;++mit) 
  {
    if (((mit->first).compare(i.get_iid())) == 0)
      {	
	std::cout << "Error: The instance " << (mit->first)
		  << " its already declared." << std::endl;
	exit(0); 
      }
  }

instances[i.get_iid()] = &i;
!!!128130.cpp!!!	addMsg(in m : Message) : void
std::map<int, Message *>::const_iterator
  mit (messages.begin()),
  mend(messages.end());

string aux;
std::stringstream stream;
int i = messages.size() + 1;
stream << i;

if (m.get_mid().compare("No_Info_Available") == 0)
  {
    m.set_mid(stream.str());
  }
else 
  {
    for(;mit!=mend;++mit) 
      {
	if (((mit->second->get_mid()).compare(m.get_mid())) == 0)
	  {
	    std::cout << "Error: the mid (" <<  m.get_mid() << 
	      ") used in the message already exists" << std::endl;
	    exit(0);
	  }
      }  
  }
messages[i] = &m;
!!!157570.cpp!!!	searchIid(in iid : string) : Instance *
std::map<string, Instance *>::const_iterator
  mit (instances.begin()),
  mend(instances.end());

for(;mit!=mend;++mit) 
  {
    if ((mit->first.compare(iid)) == 0)
      {	
	return mit->second;
      }
  }

return NULL;
!!!157954.cpp!!!	searchMid(in mid : string) : Message *
  std::map<int, Message *>::const_iterator
    mit (messages.begin()),
    mend(messages.end());
  
  for(;mit!=mend;++mit) 
    {
      string aux = mit->second->get_mid();
      if ((aux.compare(mid)) == 0)
        {	
	  return mit->second;
        }
    }
return NULL;
!!!141765.cpp!!!	firstMsg() : int
if (messages.empty())
  {
    return 1;
  }
else
  {
    return 0;
  }
!!!142021.cpp!!!	getPrevMsg() : Message *
std::map<int, Message *>::const_iterator
  mend(messages.end());
mend--;

return (mend->second);
!!!128325.cpp!!!	print() : void
std::map<string, Instance *>::const_iterator
  mit (instances.begin()),
  mend(instances.end());

for(;mit!=mend;++mit) 
  {
    mit->second->print();
  }

std::map<int, Message *>::const_iterator
  mit2 (messages.begin()),
  mend2(messages.end());

for(;mit2!=mend2;++mit2) 
  {
    mit2->second->print();
  }
!!!170181.cpp!!!	accept(inout visitor : MSCVisitor) : void
std::map<string, Instance *>::const_iterator
  mit (instances.begin()),
  mend(instances.end());

for(;mit!=mend;++mit) 
  {	
    mit->second->accept(visitor);   
  }

std::map<int, Message *>::const_iterator
  mit2 (messages.begin()),
  mend2(messages.end());

for(;mit2!=mend2;++mit2) 
  {	
    mit2->second->accept(visitor);   
  }

visitor.visitMSC(this);
